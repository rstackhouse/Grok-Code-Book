<?xml version="1.0"?>
<!-- Use current working directory as basedir. -->
<!-- Make "test" the target that gets executed when "nant" is run 
     with no arguments. -->
<project name="MessageN.Test" default="test" basedir=".">
    <property name="lib.dir" value="..\..\lib"/>
    <property name="build.dir" value="bin"/>
    <description>Tests for the MessageN namespace</description>
    
    <!-- Need to copy the NUnit DLL (and others) to the build 
        directory so the CLR automagic can load it when the 
        test is running.-->
    <target name="copyReferences">
        <copy todir="${build.dir}">
            <fileset basedir="${lib.dir}">
                <include name="*.dll" />
            </fileset>
        </copy>
    </target>
    
    <target name="build" depends="copyReferences">
        <csc 
            target="library" 
            output="${build.dir}\${project::get-name()}.dll" 
            debug="true">
            <sources>
                <!--Includes all C# files in basedir and its 
                     sub-directories. -->
                <include name="**/*.cs" />
            </sources>
            <references>
                <include name="System.dll" />
                <!--Need to tell the compiler where the NUnit
                    and other DLLs will be placed.-->
                <include 
                    name="${build.dir}\*.dll" />
            </references>
        </csc>
    </target>
    
    <target name="test" depends="build">
        <!--Use the <exec> task rather than the <nunit2> task
            to run NUnit to avoid version headaches
            see:
http://www.hanselman.com/blog/CallingNUnitFromNAntPragmatically.aspx
        -->
        <!--N.B.: Using only the name of the executable rather 
                  than its full file system path will only work
                  if its path has been set in your PATH 
                  environment varibale.
        -->
        <exec program="nunit-console">
            <arg 
                value="${build.dir}\${project::get-name()}.dll"/>
        </exec>
    </target>
    
</project>